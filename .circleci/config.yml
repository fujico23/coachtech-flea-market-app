version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1
  aws-code-deploy: circleci/aws-code-deploy@3.0.0

executors:
  laravel-circleci:
    docker:
      - image: circleci/php:7.4-node-browsers
      - image: cimg/mysql:8.0
    environment:
      - DB_CONNECTION: circle_testing
    working_directory: ~/repo

commands:
  install-dockerize:
    steps:
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
  install-php-extensions:
    steps:
      - run:
          name: Install PHP Exetensions
          command: sudo docker-php-ext-install pdo_mysql
          working_directory: src
  restore-cache-composer:
    steps:
      - restore_cache:
          key: v1-dependencies-{{ checksum "src/composer.json" }}
  install-composer:
    steps:
      - run:
          name: Install Composer
          command: composer install -n --prefer-dist
          working_directory: src
  save-cache-composer:
    steps:
      - save_cache:
          key: v1-dependencies-{{ checksum "src/composer.json" }}
          paths:
            - vendor
  migration:
    steps:
      - run:
          name: Migration
          command: php artisan migrate --env=testing
          working_directory: src
  seeding:
    steps:
      - run:
          name: Seeding
          command: php artisan db:seed --env=testing
          working_directory: src
  test-unittest:
    steps:
      - run:
          name: Run PHPUnit
          command: vendor/bin/phpunit
          working_directory: src

jobs:
  build:
    executor:
      name: laravel-circleci
    steps:
      - checkout
      - install-dockerize
      - install-php-extensions
      - restore-cache-composer
      - install-composer
      - save-cache-composer
      - migration
      - seeding
      - test-unittest
  deploy:
    docker:
      - image: circleci/php:7.4-node-browsers
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run: sudo composer self-update --1
      - restore_cache:
          key: composer-no-dev-v1-{{ checksum "src/composer.lock" }}
      - run:
          command: composer install -n --no-dev --prefer-dist
          working_directory: src
      - save_cache:
          key: composer-no-dev-v1-{{ checksum "src/composer.lock" }}
          paths:
            - vendor
      - run:
          name: archive artifacts
          command: zip -ryq coachtech-flea-market-app-main.zip .
          working_directory: src
      - aws-cli/install
      - run:
          name: upload artifacts to s3
          command: aws s3 cp coachtech-flea-market-app-main.zip s3://${AWS_S3_BUCKET_NAME}
          working_directory: src
      - run:
          name: deploy to prod
          command: |
            aws deploy create-deployment \
            --application-name flea-market-app \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name flea-market-appDeployGroup \
            --file-exists-behavior "OVERWRITE" \
            --github-location repository=fujico23/coachtech-flea-market-app,commitId=${CIRCLE_SHA1}
          working_directory: src

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main
