version: 2.1

executors:
  laravel-circleci:
    docker:
      - image: circleci/php:7.4-node-browsers
      - image: cimg/mysql:8.0
    environment:
      - DB_CONNECTION: circle_testing
    working_directory: ~/repo

commands:
  install-dockerize:
    steps:
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
  install-php-extensions:
    steps:
      - run:
          name: Install PHP Exetensions
          command: sudo docker-php-ext-install pdo_mysql
          working_directory: src
  restore-cache-composer:
    steps:
      - restore_cache:
          key: v1-dependencies-{{ checksum "src/composer.json" }}
  install-composer:
    steps:
      - run:
          name: Install Composer
          command: composer install -n --prefer-dist
          working_directory: src
  save-cache-composer:
    steps:
      - save_cache:
          key: v1-dependencies-{{ checksum "src/composer.json" }}
          paths:
            - vendor
  migration:
    steps:
      - run:
          name: Migration
          command: php artisan migrate --env=testing
          working_directory: src
  seeding:
    steps:
      - run:
          name: Seeding
          command: php artisan db:seed --env=testing
          working_directory: src
  test-unittest:
    steps:
      - run:
          name: Run PHPUnit
          command: vendor/bin/phpunit
          working_directory: src

jobs:
  build:
    executor:
      name: laravel-circleci
    steps:
      - checkout
      - install-dockerize
      - install-php-extensions
      - restore-cache-composer
      - install-composer
      - save-cache-composer
      - migration
      - seeding
      - test-unittest
